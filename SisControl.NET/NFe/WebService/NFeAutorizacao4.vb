'------------------------------------------------------------------------------
' <auto-generated>
'     O código foi gerado por uma ferramenta.
'     Versão de Tempo de Execução:4.0.30319.42000
'
'     As alterações ao arquivo poderão causar comportamento incorreto e serão perdidas se
'     o código for gerado novamente.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by wsdl, Version=4.6.1055.0.
'
Namespace NFeAutorizacaoV4
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0"),
 System.Diagnostics.DebuggerStepThroughAttribute(),
 System.ComponentModel.DesignerCategoryAttribute("code"),
 System.Web.Services.WebServiceBindingAttribute(Name:="NFeAutorizacao4Soap12", [Namespace]:="http://www.portalfiscal.inf.br/nfe/wsdl/NFeAutorizacao4")>
    Partial Public Class NFeAutorizacao4
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol

        Private nfeAutorizacaoLoteOperationCompleted As System.Threading.SendOrPostCallback

        Private nfeAutorizacaoLoteZipOperationCompleted As System.Threading.SendOrPostCallback

        '''<remarks/>
        Public Sub New(ByVal URLSel As String)
            MyBase.New
            Me.SoapVersion = System.Web.Services.Protocols.SoapProtocolVersion.Soap12
            Me.Url = URLSel
        End Sub

        '''<remarks/>
        Public Event nfeAutorizacaoLoteCompleted As nfeAutorizacaoLoteCompletedEventHandler

        '''<remarks/>
        Public Event nfeAutorizacaoLoteZipCompleted As nfeAutorizacaoLoteZipCompletedEventHandler

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.portalfiscal.inf.br/nfe/wsdl/NFeAutorizacao4/nfeAutorizacaoLote", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Bare)>
        Public Function nfeAutorizacaoLote(<System.Xml.Serialization.XmlElementAttribute([Namespace]:="http://www.portalfiscal.inf.br/nfe/wsdl/NFeAutorizacao4")> ByVal nfeDadosMsg As System.Xml.XmlNode) As <System.Xml.Serialization.XmlElementAttribute("nfeResultMsg", [Namespace]:="http://www.portalfiscal.inf.br/nfe/wsdl/NFeAutorizacao4", IsNullable:=True)> System.Xml.XmlNode
            Dim results() As Object = Me.Invoke("nfeAutorizacaoLote", New Object() {nfeDadosMsg})
            Return CType(results(0), System.Xml.XmlNode)
        End Function

        '''<remarks/>
        Public Function BeginnfeAutorizacaoLote(ByVal nfeDadosMsg As System.Xml.XmlNode, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("nfeAutorizacaoLote", New Object() {nfeDadosMsg}, callback, asyncState)
        End Function

        '''<remarks/>
        Public Function EndnfeAutorizacaoLote(ByVal asyncResult As System.IAsyncResult) As System.Xml.XmlNode
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0), System.Xml.XmlNode)
        End Function

        '''<remarks/>
        Public Overloads Sub nfeAutorizacaoLoteAsync(ByVal nfeDadosMsg As System.Xml.XmlNode)
            Me.nfeAutorizacaoLoteAsync(nfeDadosMsg, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub nfeAutorizacaoLoteAsync(ByVal nfeDadosMsg As System.Xml.XmlNode, ByVal userState As Object)
            If (Me.nfeAutorizacaoLoteOperationCompleted Is Nothing) Then
                Me.nfeAutorizacaoLoteOperationCompleted = AddressOf Me.OnnfeAutorizacaoLoteOperationCompleted
            End If
            Me.InvokeAsync("nfeAutorizacaoLote", New Object() {nfeDadosMsg}, Me.nfeAutorizacaoLoteOperationCompleted, userState)
        End Sub

        Private Sub OnnfeAutorizacaoLoteOperationCompleted(ByVal arg As Object)
            If (Not (Me.nfeAutorizacaoLoteCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent nfeAutorizacaoLoteCompleted(Me, New nfeAutorizacaoLoteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.portalfiscal.inf.br/nfe/wsdl/NFeAutorizacao4/nfeAutorizacaoLoteZip", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Bare)>
        Public Function nfeAutorizacaoLoteZip(<System.Xml.Serialization.XmlElementAttribute([Namespace]:="http://www.portalfiscal.inf.br/nfe/wsdl/NFeAutorizacao4")> ByVal nfeDadosMsgZip As String) As <System.Xml.Serialization.XmlElementAttribute("nfeResultMsg", [Namespace]:="http://www.portalfiscal.inf.br/nfe/wsdl/NFeAutorizacao4", IsNullable:=True)> System.Xml.XmlNode
            Dim results() As Object = Me.Invoke("nfeAutorizacaoLoteZip", New Object() {nfeDadosMsgZip})
            Return CType(results(0), System.Xml.XmlNode)
        End Function

        '''<remarks/>
        Public Function BeginnfeAutorizacaoLoteZip(ByVal nfeDadosMsgZip As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("nfeAutorizacaoLoteZip", New Object() {nfeDadosMsgZip}, callback, asyncState)
        End Function

        '''<remarks/>
        Public Function EndnfeAutorizacaoLoteZip(ByVal asyncResult As System.IAsyncResult) As System.Xml.XmlNode
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0), System.Xml.XmlNode)
        End Function

        '''<remarks/>
        Public Overloads Sub nfeAutorizacaoLoteZipAsync(ByVal nfeDadosMsgZip As String)
            Me.nfeAutorizacaoLoteZipAsync(nfeDadosMsgZip, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub nfeAutorizacaoLoteZipAsync(ByVal nfeDadosMsgZip As String, ByVal userState As Object)
            If (Me.nfeAutorizacaoLoteZipOperationCompleted Is Nothing) Then
                Me.nfeAutorizacaoLoteZipOperationCompleted = AddressOf Me.OnnfeAutorizacaoLoteZipOperationCompleted
            End If
            Me.InvokeAsync("nfeAutorizacaoLoteZip", New Object() {nfeDadosMsgZip}, Me.nfeAutorizacaoLoteZipOperationCompleted, userState)
        End Sub

        Private Sub OnnfeAutorizacaoLoteZipOperationCompleted(ByVal arg As Object)
            If (Not (Me.nfeAutorizacaoLoteZipCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent nfeAutorizacaoLoteZipCompleted(Me, New nfeAutorizacaoLoteZipCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")>
    Public Delegate Sub nfeAutorizacaoLoteCompletedEventHandler(ByVal sender As Object, ByVal e As nfeAutorizacaoLoteCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0"),
 System.Diagnostics.DebuggerStepThroughAttribute(),
 System.ComponentModel.DesignerCategoryAttribute("code")>
    Partial Public Class nfeAutorizacaoLoteCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As System.Xml.XmlNode
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0), System.Xml.XmlNode)
            End Get
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")>
    Public Delegate Sub nfeAutorizacaoLoteZipCompletedEventHandler(ByVal sender As Object, ByVal e As nfeAutorizacaoLoteZipCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0"),
 System.Diagnostics.DebuggerStepThroughAttribute(),
 System.ComponentModel.DesignerCategoryAttribute("code")>
    Partial Public Class nfeAutorizacaoLoteZipCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As System.Xml.XmlNode
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0), System.Xml.XmlNode)
            End Get
        End Property
    End Class
End Namespace